/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyAccountImport } from './routes/verify-account'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as CreateOrganizationImport } from './routes/create-organization'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedLayoutImport } from './routes/_authed/_layout'
import { Route as AcceptInvitationInvitationIdInvitationEmailImport } from './routes/accept-invitation/$invitationId.$invitationEmail'
import { Route as AuthedLayoutTeamChatIndexImport } from './routes/_authed/_layout/team-chat/index'
import { Route as AuthedLayoutOrganizationsIndexImport } from './routes/_authed/_layout/organizations/index'
import { Route as AuthedLayoutOrganizationSettingsIndexImport } from './routes/_authed/_layout/organization-settings/index'
import { Route as AuthedLayoutMembersIndexImport } from './routes/_authed/_layout/members/index'
import { Route as AuthedLayoutChatIndexImport } from './routes/_authed/_layout/chat/index'
import { Route as AuthedLayoutTeamspaceTeamspaceIdImport } from './routes/_authed/_layout/teamspace/$teamspaceId'
import { Route as AuthedLayoutProjectProjectIdImport } from './routes/_authed/_layout/project/$projectId'
import { Route as AuthedLayoutChatChatroomIdImport } from './routes/_authed/_layout/chat/$chatroomId'

// Create/Update Routes

const VerifyAccountRoute = VerifyAccountImport.update({
  id: '/verify-account',
  path: '/verify-account',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const CreateOrganizationRoute = CreateOrganizationImport.update({
  id: '/create-organization',
  path: '/create-organization',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedLayoutRoute = AuthedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthedRoute,
} as any)

const AcceptInvitationInvitationIdInvitationEmailRoute =
  AcceptInvitationInvitationIdInvitationEmailImport.update({
    id: '/accept-invitation/$invitationId/$invitationEmail',
    path: '/accept-invitation/$invitationId/$invitationEmail',
    getParentRoute: () => rootRoute,
  } as any)

const AuthedLayoutTeamChatIndexRoute = AuthedLayoutTeamChatIndexImport.update({
  id: '/team-chat/',
  path: '/team-chat/',
  getParentRoute: () => AuthedLayoutRoute,
} as any)

const AuthedLayoutOrganizationsIndexRoute =
  AuthedLayoutOrganizationsIndexImport.update({
    id: '/organizations/',
    path: '/organizations/',
    getParentRoute: () => AuthedLayoutRoute,
  } as any)

const AuthedLayoutOrganizationSettingsIndexRoute =
  AuthedLayoutOrganizationSettingsIndexImport.update({
    id: '/organization-settings/',
    path: '/organization-settings/',
    getParentRoute: () => AuthedLayoutRoute,
  } as any)

const AuthedLayoutMembersIndexRoute = AuthedLayoutMembersIndexImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => AuthedLayoutRoute,
} as any)

const AuthedLayoutChatIndexRoute = AuthedLayoutChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AuthedLayoutRoute,
} as any)

const AuthedLayoutTeamspaceTeamspaceIdRoute =
  AuthedLayoutTeamspaceTeamspaceIdImport.update({
    id: '/teamspace/$teamspaceId',
    path: '/teamspace/$teamspaceId',
    getParentRoute: () => AuthedLayoutRoute,
  } as any)

const AuthedLayoutProjectProjectIdRoute =
  AuthedLayoutProjectProjectIdImport.update({
    id: '/project/$projectId',
    path: '/project/$projectId',
    getParentRoute: () => AuthedLayoutRoute,
  } as any)

const AuthedLayoutChatChatroomIdRoute = AuthedLayoutChatChatroomIdImport.update(
  {
    id: '/chat/$chatroomId',
    path: '/chat/$chatroomId',
    getParentRoute: () => AuthedLayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/create-organization': {
      id: '/create-organization'
      path: '/create-organization'
      fullPath: '/create-organization'
      preLoaderRoute: typeof CreateOrganizationImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/verify-account': {
      id: '/verify-account'
      path: '/verify-account'
      fullPath: '/verify-account'
      preLoaderRoute: typeof VerifyAccountImport
      parentRoute: typeof rootRoute
    }
    '/_authed/_layout': {
      id: '/_authed/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedLayoutImport
      parentRoute: typeof AuthedImport
    }
    '/accept-invitation/$invitationId/$invitationEmail': {
      id: '/accept-invitation/$invitationId/$invitationEmail'
      path: '/accept-invitation/$invitationId/$invitationEmail'
      fullPath: '/accept-invitation/$invitationId/$invitationEmail'
      preLoaderRoute: typeof AcceptInvitationInvitationIdInvitationEmailImport
      parentRoute: typeof rootRoute
    }
    '/_authed/_layout/chat/$chatroomId': {
      id: '/_authed/_layout/chat/$chatroomId'
      path: '/chat/$chatroomId'
      fullPath: '/chat/$chatroomId'
      preLoaderRoute: typeof AuthedLayoutChatChatroomIdImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/project/$projectId': {
      id: '/_authed/_layout/project/$projectId'
      path: '/project/$projectId'
      fullPath: '/project/$projectId'
      preLoaderRoute: typeof AuthedLayoutProjectProjectIdImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/teamspace/$teamspaceId': {
      id: '/_authed/_layout/teamspace/$teamspaceId'
      path: '/teamspace/$teamspaceId'
      fullPath: '/teamspace/$teamspaceId'
      preLoaderRoute: typeof AuthedLayoutTeamspaceTeamspaceIdImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/chat/': {
      id: '/_authed/_layout/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthedLayoutChatIndexImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/members/': {
      id: '/_authed/_layout/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof AuthedLayoutMembersIndexImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/organization-settings/': {
      id: '/_authed/_layout/organization-settings/'
      path: '/organization-settings'
      fullPath: '/organization-settings'
      preLoaderRoute: typeof AuthedLayoutOrganizationSettingsIndexImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/organizations/': {
      id: '/_authed/_layout/organizations/'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof AuthedLayoutOrganizationsIndexImport
      parentRoute: typeof AuthedLayoutImport
    }
    '/_authed/_layout/team-chat/': {
      id: '/_authed/_layout/team-chat/'
      path: '/team-chat'
      fullPath: '/team-chat'
      preLoaderRoute: typeof AuthedLayoutTeamChatIndexImport
      parentRoute: typeof AuthedLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthedLayoutRouteChildren {
  AuthedLayoutChatChatroomIdRoute: typeof AuthedLayoutChatChatroomIdRoute
  AuthedLayoutProjectProjectIdRoute: typeof AuthedLayoutProjectProjectIdRoute
  AuthedLayoutTeamspaceTeamspaceIdRoute: typeof AuthedLayoutTeamspaceTeamspaceIdRoute
  AuthedLayoutChatIndexRoute: typeof AuthedLayoutChatIndexRoute
  AuthedLayoutMembersIndexRoute: typeof AuthedLayoutMembersIndexRoute
  AuthedLayoutOrganizationSettingsIndexRoute: typeof AuthedLayoutOrganizationSettingsIndexRoute
  AuthedLayoutOrganizationsIndexRoute: typeof AuthedLayoutOrganizationsIndexRoute
  AuthedLayoutTeamChatIndexRoute: typeof AuthedLayoutTeamChatIndexRoute
}

const AuthedLayoutRouteChildren: AuthedLayoutRouteChildren = {
  AuthedLayoutChatChatroomIdRoute: AuthedLayoutChatChatroomIdRoute,
  AuthedLayoutProjectProjectIdRoute: AuthedLayoutProjectProjectIdRoute,
  AuthedLayoutTeamspaceTeamspaceIdRoute: AuthedLayoutTeamspaceTeamspaceIdRoute,
  AuthedLayoutChatIndexRoute: AuthedLayoutChatIndexRoute,
  AuthedLayoutMembersIndexRoute: AuthedLayoutMembersIndexRoute,
  AuthedLayoutOrganizationSettingsIndexRoute:
    AuthedLayoutOrganizationSettingsIndexRoute,
  AuthedLayoutOrganizationsIndexRoute: AuthedLayoutOrganizationsIndexRoute,
  AuthedLayoutTeamChatIndexRoute: AuthedLayoutTeamChatIndexRoute,
}

const AuthedLayoutRouteWithChildren = AuthedLayoutRoute._addFileChildren(
  AuthedLayoutRouteChildren,
)

interface AuthedRouteChildren {
  AuthedLayoutRoute: typeof AuthedLayoutRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedLayoutRoute: AuthedLayoutRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedLayoutRouteWithChildren
  '/create-organization': typeof CreateOrganizationRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/accept-invitation/$invitationId/$invitationEmail': typeof AcceptInvitationInvitationIdInvitationEmailRoute
  '/chat/$chatroomId': typeof AuthedLayoutChatChatroomIdRoute
  '/project/$projectId': typeof AuthedLayoutProjectProjectIdRoute
  '/teamspace/$teamspaceId': typeof AuthedLayoutTeamspaceTeamspaceIdRoute
  '/chat': typeof AuthedLayoutChatIndexRoute
  '/members': typeof AuthedLayoutMembersIndexRoute
  '/organization-settings': typeof AuthedLayoutOrganizationSettingsIndexRoute
  '/organizations': typeof AuthedLayoutOrganizationsIndexRoute
  '/team-chat': typeof AuthedLayoutTeamChatIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedLayoutRouteWithChildren
  '/create-organization': typeof CreateOrganizationRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/accept-invitation/$invitationId/$invitationEmail': typeof AcceptInvitationInvitationIdInvitationEmailRoute
  '/chat/$chatroomId': typeof AuthedLayoutChatChatroomIdRoute
  '/project/$projectId': typeof AuthedLayoutProjectProjectIdRoute
  '/teamspace/$teamspaceId': typeof AuthedLayoutTeamspaceTeamspaceIdRoute
  '/chat': typeof AuthedLayoutChatIndexRoute
  '/members': typeof AuthedLayoutMembersIndexRoute
  '/organization-settings': typeof AuthedLayoutOrganizationSettingsIndexRoute
  '/organizations': typeof AuthedLayoutOrganizationsIndexRoute
  '/team-chat': typeof AuthedLayoutTeamChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/create-organization': typeof CreateOrganizationRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-account': typeof VerifyAccountRoute
  '/_authed/_layout': typeof AuthedLayoutRouteWithChildren
  '/accept-invitation/$invitationId/$invitationEmail': typeof AcceptInvitationInvitationIdInvitationEmailRoute
  '/_authed/_layout/chat/$chatroomId': typeof AuthedLayoutChatChatroomIdRoute
  '/_authed/_layout/project/$projectId': typeof AuthedLayoutProjectProjectIdRoute
  '/_authed/_layout/teamspace/$teamspaceId': typeof AuthedLayoutTeamspaceTeamspaceIdRoute
  '/_authed/_layout/chat/': typeof AuthedLayoutChatIndexRoute
  '/_authed/_layout/members/': typeof AuthedLayoutMembersIndexRoute
  '/_authed/_layout/organization-settings/': typeof AuthedLayoutOrganizationSettingsIndexRoute
  '/_authed/_layout/organizations/': typeof AuthedLayoutOrganizationsIndexRoute
  '/_authed/_layout/team-chat/': typeof AuthedLayoutTeamChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/create-organization'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/verify-account'
    | '/accept-invitation/$invitationId/$invitationEmail'
    | '/chat/$chatroomId'
    | '/project/$projectId'
    | '/teamspace/$teamspaceId'
    | '/chat'
    | '/members'
    | '/organization-settings'
    | '/organizations'
    | '/team-chat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/create-organization'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/verify-account'
    | '/accept-invitation/$invitationId/$invitationEmail'
    | '/chat/$chatroomId'
    | '/project/$projectId'
    | '/teamspace/$teamspaceId'
    | '/chat'
    | '/members'
    | '/organization-settings'
    | '/organizations'
    | '/team-chat'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/create-organization'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/verify-account'
    | '/_authed/_layout'
    | '/accept-invitation/$invitationId/$invitationEmail'
    | '/_authed/_layout/chat/$chatroomId'
    | '/_authed/_layout/project/$projectId'
    | '/_authed/_layout/teamspace/$teamspaceId'
    | '/_authed/_layout/chat/'
    | '/_authed/_layout/members/'
    | '/_authed/_layout/organization-settings/'
    | '/_authed/_layout/organizations/'
    | '/_authed/_layout/team-chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  CreateOrganizationRoute: typeof CreateOrganizationRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  VerifyAccountRoute: typeof VerifyAccountRoute
  AcceptInvitationInvitationIdInvitationEmailRoute: typeof AcceptInvitationInvitationIdInvitationEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  CreateOrganizationRoute: CreateOrganizationRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  VerifyAccountRoute: VerifyAccountRoute,
  AcceptInvitationInvitationIdInvitationEmailRoute:
    AcceptInvitationInvitationIdInvitationEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/create-organization",
        "/forgot-password",
        "/sign-in",
        "/sign-up",
        "/verify-account",
        "/accept-invitation/$invitationId/$invitationEmail"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/_layout"
      ]
    },
    "/create-organization": {
      "filePath": "create-organization.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/verify-account": {
      "filePath": "verify-account.tsx"
    },
    "/_authed/_layout": {
      "filePath": "_authed/_layout.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/_layout/chat/$chatroomId",
        "/_authed/_layout/project/$projectId",
        "/_authed/_layout/teamspace/$teamspaceId",
        "/_authed/_layout/chat/",
        "/_authed/_layout/members/",
        "/_authed/_layout/organization-settings/",
        "/_authed/_layout/organizations/",
        "/_authed/_layout/team-chat/"
      ]
    },
    "/accept-invitation/$invitationId/$invitationEmail": {
      "filePath": "accept-invitation/$invitationId.$invitationEmail.tsx"
    },
    "/_authed/_layout/chat/$chatroomId": {
      "filePath": "_authed/_layout/chat/$chatroomId.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/project/$projectId": {
      "filePath": "_authed/_layout/project/$projectId.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/teamspace/$teamspaceId": {
      "filePath": "_authed/_layout/teamspace/$teamspaceId.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/chat/": {
      "filePath": "_authed/_layout/chat/index.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/members/": {
      "filePath": "_authed/_layout/members/index.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/organization-settings/": {
      "filePath": "_authed/_layout/organization-settings/index.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/organizations/": {
      "filePath": "_authed/_layout/organizations/index.tsx",
      "parent": "/_authed/_layout"
    },
    "/_authed/_layout/team-chat/": {
      "filePath": "_authed/_layout/team-chat/index.tsx",
      "parent": "/_authed/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
