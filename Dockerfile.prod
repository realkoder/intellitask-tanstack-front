# DOCKER COMMANDS
# build image: docker build -f Dockerfile.prod --platform linux/amd64 -t alex8970/intellitask-frontend:v1.0 .
# run image: docker run -p 3000:3000 alex8970/intellitask-frontend:v1.0
# push image: docker push  alex8970/intellitask-frontend:v1.0

# FROM  oven/bun AS builder

# WORKDIR /app

# # Copy necessary files only
# COPY app ./app
# COPY package.json bun.lockb ./
# COPY app.config.ts tsconfig.json tsconfig.node.json vite-env.d.ts ./
# COPY components.json ./

# # Install deps and build the application
# RUN bun install
# RUN bun run build

# # Production stage
# FROM oven/bun AS production

# WORKDIR /app
# # Copy only the necessary built files from builder
# COPY --from=builder /app/.output/server server
# COPY --from=builder /app/.output/public public
# COPY package.json /app
# # Expose the port your app runs on (adjust if needed)
# EXPOSE 3000

# # Command to run the application
# CMD ["bun", "run", "server/index.mjs"]

# -------------------------

FROM node:18-alpine AS builder

WORKDIR /app

# Copy necessary files only
COPY app ./app
COPY package.json bun.lockb ./
COPY app.config.ts tsconfig.json tsconfig.node.json vite-env.d.ts ./
COPY components.json ./

# Install deps and build the application
RUN npm install --legacy-peer-deps
RUN npm run build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app
# Copy only the necessary built files from builder
COPY --from=builder /app/.output/server server
COPY --from=builder /app/.output/public public
COPY --from=builder /app/.vinxi .vinxi
COPY package.json /app
# Expose the port your app runs on (adjust if needed)
EXPOSE 3000

# Command to run the application
CMD ["node", "server/index.mjs"]


# ------------------

# # Stage 1: Dependency Installation
# FROM oven/bun AS deps

# COPY package.json ./
# COPY . .

# # RUN bun install
# RUN bun install --production
# RUN bun run build

# # Set environment variable
# # ENV NODE_ENV=production

# # # Stage 2: Build Stage
# # FROM oven/bun AS builder
# # COPY --from=deps /node_modules ./node_modules
# # COPY --from=deps package.json ./
# # COPY . .

# # # Run the build command
# # RUN NODE_ENV=production bun run build

# # # Stage 3: Running the Application
# # FROM oven/bun AS runner

# # # Copy the necessary files from the builder stage
# # COPY --from=builder .output ./build
# # COPY --from=builder package.json ./

# # Set environment variable
# ENV NODE_ENV=production

# EXPOSE 3000

# # ENV PORT=3000
# CMD ["bun", "run", "start"]
# # CMD ["node", ".output/server/index.mjs"]